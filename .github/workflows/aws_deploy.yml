name: Deploy to AWS ECS

# Only trigger, when the build workflow succeeded
on:
  push:
    tags:
      - '*.*'
  workflow_run:
    workflows: [Docker CI]
    types:
      - completed

env:
  AWS_REGION: us-east-1                                                           # set this to your preferred AWS region, e.g. us-west-1
  ECS_SERVICE: alura-service-devops                                               # set this to your Amazon ECS service name
  ECS_CLUSTER: alura-devop-challange                                              # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: alura-devops-challenge                                     # set this to the path to your Amazon ECS task definition
                                                                                  # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: docker-cleberrangeljr                                           # set this to the name of the container in the
                                                                                  # containerDefinitions section of your task definition
  DOCKER_IMAGE_NAME: cleberrangeljr/alura-devops-challenge:${{github.ref_name}}   # docker hub repo

jobs:
  deploy:
    name: Deploy to AWS ECS
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ECS_ACESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ECS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ env.DOCKER_IMAGE_NAME }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true